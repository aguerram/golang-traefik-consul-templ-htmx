// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: users_query.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getAllUsers = `-- name: GetAllUsers :many
SELECT id, email, password, created_at, updated_at FROM users
WHERE users.created_at > $1 AND users.created_at < $2
LIMIT $4 OFFSET $3
`

type GetAllUsersParams struct {
	StartDate   pgtype.Timestamp
	EndDate     pgtype.Timestamp
	StartOffset int32
	MaxElements int32
}

func (q *Queries) GetAllUsers(ctx context.Context, arg GetAllUsersParams) ([]User, error) {
	rows, err := q.db.Query(ctx, getAllUsers,
		arg.StartDate,
		arg.EndDate,
		arg.StartOffset,
		arg.MaxElements,
	)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []User
	for rows.Next() {
		var i User
		if err := rows.Scan(
			&i.ID,
			&i.Email,
			&i.Password,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
